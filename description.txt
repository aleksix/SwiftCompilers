Some of the items refer to functions in SymbolClasses and SwiftSpecials classes due to a huge number/complexity of items to be listed at once
Like, "identifiers" cover about half of Unicode.

Legend:
* - previous pattern repeated zero or more times
* - previous pattern repeated zero or one time
| - choice of either pattern
(Something) - reference to "Something", e.g. a class or a function
x-y - any item from a range [x;y],
[xyz] - any item from x, y or z

KEYWORD = one of the identifiers in (SwiftSpecials.keywords)
IDENTIFIER = (SymbolClasses.isIdentifierHead) (SymbolClasses.isIdentifierSymbol)* `(SymbolClasses.isIdentifierHead) (SymbolClasses.isIdentifierSymbol)*`
CONTEXT_KEYWORD = one of the identifiers in (SwiftSpecials.contextSensitive)
STRING_LITERAL = "Any Unicode scalar value except ", unescaped \, U+000A, or U+000D" | """ Any Unicode scalar value except unescaped \"""
INTERPOLATED_STRING = STRING_LITERAL with a combination of \( expression ) inside the quotes
INT_LITERAL = [0-9][0-9_]* | 0x[0-9a-fA-F][0-9a-fA-F_]* | 0o[0-7][0-7_]* | 0b[01][01_]*
FLOAT_LITERAL = [0-9][0-9]_*.[0-9][0-9_]* | [0-9][0-9]*.[0-9][0-9_]*[eE][+-]?[0-9][0-9_]* | [0-9][0-9_]*[eE][+-]?[0-9][0-9_]* | 0x[0-9A-Fa-f][0-9A-Fa-f_]*(.[0-9A-Fa-f][0-9A-Fa-f_]*)?[pP][+-]?[0-9][0-9_]*
EXPRESSION_LITERAL = one of the identifiers in (SwiftSpecials.expressionLiterals)
BOOLEAN_LITERAL = true | false
NIL_LITERAL = nil
BINARY_OPERATOR = [whitespace newline] (SymbolClasses.isOperatorHead) (SymbolClasses.isOperatorSymbol)* [whitespace newline]
POSTFIX_OPERATOR = (SymbolClasses.isOperatorHead) (SymbolClasses.isOperatorSymbol)* [whitespace newline]
PREFIX_OPERATOR = [whitespace newline] (SymbolClasses.isOperatorHead) (SymbolClasses.isOperatorSymbol)*
BRACKET_L = (
BRACKET_R = )
CURLY_L = {
CURLY_R = }
SQUARE_L = [
SQUARE_R = ]
DOT = .
COMMA = ,
COLON = :
SEMICOLON = ;
EQUAL = =
AT = @
POUND = #
AMPERSAND = &
PREFIX_AMPERSAND = [whitespace newline] &
ARROW = ->
BACKTICK = `
QUESTION_MARK = ?
POSTFIX_QUESTION = ? [whitespace newline]
EXCLAMATION_MARK = !
PREFIX_DOT = [whitespace newline] .
ERROR = Something went wrong